(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{220:function(t,e,i){"use strict";i.r(e);var r=i(0),s=Object(r.a)({},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("div",{staticClass:"content"},[t._m(0),t._v(" "),i("p",[i("a",{attrs:{href:"https://www.hutool.club/docs/#/core/IO/IO%E5%B7%A5%E5%85%B7%E7%B1%BB-IoUtil",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hutool"),i("OutboundLink")],1),t._v("\nHutool是一个Java工具包，也只是一个工具包，它帮助我们简化每一行代码，减少每一个方法，让Java语言也可以“甜甜的”。它最初是作者项目中“util”包的一个整理，后来慢慢积累并加入更多非业务相关功能，并广泛学习其它开源项目精髓，经过自己整理修改，最终形成丰富的开源工具集。\nHutool是Hu + tool的自造词，谐音“糊涂”，寓意，追求“万事都作糊涂观，无所谓失，无所谓得”的境界。")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),t._m(8),t._v(" "),t._m(9),t._v(" "),i("p",[t._v("常用方法 sub 里面的异常做好了 方法越界之类的 全帮你处理了\nformat方法 这个方法用来 代替字符串拼接")]),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),t._m(12),t._v(" "),t._m(13),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),t._m(16),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),i("p",[t._v("以上四种运算都会将double转为BigDecimal后计算，解决float和double类型无法进行精确计算的问题。这些方法常用于商业计算。")]),t._v(" "),t._m(19),t._v(" "),i("p",[t._v("UUID\nUUID全称通用唯一识别码（universally unique identifier），JDK通过java.util.UUID提供了 Leach-Salz 变体的封装。在Hutool中，生成一个UUID字符串方法如下：\n//生成的UUID是带-的字符串，类似于：a5c8a5e8-df2b-4706-bea4-08d0939410e3\nString uuid = IdUtil.randomUUID();")]),t._v(" "),i("p",[t._v("//生成的是不带-的字符串，类似于：b17f24ff026d40949c85a24f4f375d42\nString simpleUUID = IdUtil.simpleUUID();")]),t._v(" "),i("p",[t._v("ObjectId\nObjectId是MongoDB数据库的一种唯一ID生成策略，是UUID version1的变种，详细介绍可见：服务化框架－分布式Unique ID的生成方法一览。\n//生成类似：5b9e306a4df4f8c54a39fb0c")]),t._v(" "),i("p",[t._v("String id = ObjectId.next();")]),t._v(" "),i("p",[t._v("//方法2：从Hutool-4.1.14开始提供\nString id2 = IdUtil.objectId();")]),t._v(" "),i("p",[t._v("Snowflake\n分布式系统中，有一些需要使用全局唯一ID的场景，有些时候我们希望能使用一种简单一些的ID，并且希望ID能够按照时间有序生成。Twitter的Snowflake 算法就是这种生成器。\n//参数1为终端ID\n//参数2为数据中心ID\nSnowflake snowflake = IdUtil.createSnowflake(1, 1);\nlong id = snowflake.nextId();")]),t._v(" "),t._m(20),t._v(" "),i("p",[t._v("ZipUtil.zip 方法提供一系列的重载方法，满足不同需求的压缩需求，这包括：\nZipUtil.unzip 解压。同样提供几个重载，满足不同需求。")]),t._v(" "),t._m(21),t._v(" "),t._m(22),t._v(" "),i("p",[t._v('//通常使用\nString result1 = StrFormatter.format("this is {} for {}", "a", "b");\nAssert.assertEquals("this is a for b", result1);')]),t._v(" "),i("p",[t._v('//转义{}\nString result2 = StrFormatter.format("this is \\{} for {}", "a", "b");\nAssert.assertEquals("this is {} for a", result2);')]),t._v(" "),t._m(23),t._v(" "),t._m(24),t._v(" "),t._m(25),t._v(" "),i("p",[t._v('2.字符串切割-StrSpliter\nString str1 = "a, ,efedsfs,   ddf";\n//参数：被切分字符串，分隔符逗号，0表示无限制分片数，去除两边空格，忽略空白项\nList'),i("String",[t._v(" split = StrSpliter.split(str1, ',', 0, true, true);")])],1)])},[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介","aria-hidden":"true"}},[this._v("#")]),this._v(" 简介")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"convert类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#convert类","aria-hidden":"true"}},[this._v("#")]),this._v(" Convert类")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("Convert类可以说是一个工具方法类，里面封装了针对Java常见类型的转换，用于简化类型转换。Convert类中大部分方法为toXXX，参数为Object，可以实现将任意可能的类型转换为指定类型。同时支持第二个参数defaultValue用于在转换失败时返回一个默认值。\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("转换为字符串")]),this._v(" "),e("li",[this._v("数组之间的转换等")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"日期时间工具-dateutil"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#日期时间工具-dateutil","aria-hidden":"true"}},[this._v("#")]),this._v(" 日期时间工具-DateUtil")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Date、long、Calendar之间的相互转换")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"io工具类-ioutil"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#io工具类-ioutil","aria-hidden":"true"}},[this._v("#")]),this._v(" IO工具类-IoUtil")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("IO工具类-IoUtil")]),this._v(" "),e("li",[this._v("文件工具类-FileUtil")]),this._v(" "),e("li",[this._v("文件类型判断-FileTypeUtil 在文件上传时，有时候我们需要判断文件类型。但是又不能简单的通过扩展名来判断（防止恶意脚本等通过上传到服务器上），于是我们需要在服务端通过读取文件的首部几个二进制位来判断常用的文件类型。")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"常用工具类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#常用工具类","aria-hidden":"true"}},[this._v("#")]),this._v(" 常用工具类")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"字符串工具-strutil"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符串工具-strutil","aria-hidden":"true"}},[this._v("#")]),this._v(" 字符串工具-StrUtil")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"_16进制工具-hexutil"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_16进制工具-hexutil","aria-hidden":"true"}},[this._v("#")]),this._v(" 16进制工具-HexUtil")])},function(){var t=this.$createElement,e=this._self._c||t;return e("pre",[e("code",[this._v("  生成16进制的东西\n")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"对象工具-objectutil"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象工具-objectutil","aria-hidden":"true"}},[this._v("#")]),this._v(" 对象工具-ObjectUtil")])},function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ul",[i("li",[t._v("几个比较常用的方法")]),t._v(" "),i("li",[t._v("ObjectUtil.equal")]),t._v(" "),i("li",[t._v("ObjectUtil.length")]),t._v(" "),i("li",[t._v("ObjectUtil.contains")]),t._v(" "),i("li")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"反射工具-reflectutil"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#反射工具-reflectutil","aria-hidden":"true"}},[this._v("#")]),this._v(" 反射工具-ReflectUtil")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("获取构造的对象")]),this._v(" "),e("li",[this._v("获取某个类的所有方法 方法的决定路径")]),this._v(" "),e("li",[this._v("获取某个类指定的方法")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"泛型类型工具-typeutil"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#泛型类型工具-typeutil","aria-hidden":"true"}},[this._v("#")]),this._v(" 泛型类型工具-TypeUtil")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("获取Type对应的原始类")]),this._v(" "),e("li",[this._v("获取方法参数的泛型类型")]),this._v(" "),e("li",[this._v("获取泛型类子类中泛型的填充类型")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"数字工具-numberutil"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数字工具-numberutil","aria-hidden":"true"}},[this._v("#")]),this._v(" 数字工具-NumberUtil")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"唯一id工具-idutil"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#唯一id工具-idutil","aria-hidden":"true"}},[this._v("#")]),this._v(" 唯一ID工具-IdUtil")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"压缩工具-ziputil"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#压缩工具-ziputil","aria-hidden":"true"}},[this._v("#")]),this._v(" 压缩工具-ZipUtil")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"正则工具-reutil"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则工具-reutil","aria-hidden":"true"}},[this._v("#")]),this._v(" 正则工具-ReUtil")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"字符串格式化-strformatter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#字符串格式化-strformatter","aria-hidden":"true"}},[this._v("#")]),this._v(" 字符串格式化-StrFormatter")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("//转义"),e("br"),this._v('\nString result3 = StrFormatter.format("this is \\\\{} for {}", "a", "b");\nAssert.assertEquals("this is \\a for')])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"集合工具-collutil"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#集合工具-collutil","aria-hidden":"true"}},[this._v("#")]),this._v(" 集合工具-CollUtil")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ol",[e("li",[this._v("join 方法\n将集合转换为字符串，这个方法还是挺常用，是StrUtil.split的反方法。这个方法的参数支持各种类型对象的集合，最后连接每个对象时候调用其toString()方法。栗子如下"),e("br"),this._v("\nsortPageAll、sortPageAll2方法\n这个是用于多个集合 合并之后然后再比较再取到符合的再放到一个集合里面")])])}],!1,null,null,null);e.default=s.exports}}]);