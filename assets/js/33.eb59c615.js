(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{183:function(t,e,s){"use strict";s.r(e);var r=s(0),a=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[s("h1",{attrs:{id:"redis-缓存学习"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis-缓存学习","aria-hidden":"true"}},[t._v("#")]),t._v(" redis 缓存学习")]),t._v(" "),s("h2",{attrs:{id:"redis提供的5种结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#redis提供的5种结构","aria-hidden":"true"}},[t._v("#")]),t._v(" redis提供的5种结构")]),t._v(" "),s("p",[t._v("String  可以是字符串 整数 或者浮点数     可以对字符串 其中一部分操作 对整数和浮点数执行自增 或者自减")]),t._v(" "),s("p",[t._v("List     一个链表上的每个节点都包含了字符串    从链表的两端推入或者弹出元素 根据偏移量对链表进行修剪 读取单个或者多个元素")]),t._v(" "),s("p",[t._v("set        包含字符串的无序收集器      添加 获取  移除单个元素  检查一个元素是否存在 于这个集合中  计算交集 并集 差集 从集合中随机获取元素")]),t._v(" "),s("p",[t._v("Hash    包含键值对的无序列表      获取单个键值对  获取所有建值对")]),t._v(" "),s("p",[t._v("ZSET（有序集合）  字符串成员 和 浮点数分值 之间的有序映射 元素的排序顺序由分值的大小决定")])])}],!1,null,null,null);e.default=a.exports}}]);