(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{192:function(t,n,a){"use strict";a.r(n);var s=a(0),e=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,n=t.$createElement,a=t._self._c||n;return a("div",{staticClass:"content"},[a("h3",{attrs:{id:"二维数组与方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二维数组与方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 二维数组与方法")]),t._v(" "),a("h4",{attrs:{id:"二维数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二维数组","aria-hidden":"true"}},[t._v("#")]),t._v(" 二维数组")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("什么是二维?")])]),t._v(" "),a("p",[t._v("​\t比如（合金弹头、超级玛丽）")]),t._v(" "),a("p",[t._v("​\t二维数组里面放一维数组。")]),t._v(" "),a("p",[a("strong",[t._v("什么是二维数组?")])]),t._v(" "),a("p",[t._v("​\t二维数组本质上是以数组作为数组元素的数组，即“数组的数组”，")]),t._v(" "),a("p",[t._v("​\t二维数组又称为"),a("strong",[t._v("矩阵")]),t._v("，行列数相等的矩阵称为方阵")]),t._v(" "),a("p",[a("strong",[t._v("怎么创建一个二维数组?")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("数据类型[][]  对象名 = new 数据类型[x][y];\nx代表行\ny代表列\n")])])]),a("p",[t._v("例如:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("int[][] a = new int[2][2];\n")])])]),a("p",[t._v("数组：使用索引来操作元素，下面给二维数组赋值")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("a[0][0] = 1;//第一行第一列\na[0][1] = 2;//第一行第二列\na[1][0] = 3;//第二行第一列\na[1][1] = 4;//第二行第二列\n")])])]),a("p",[t._v("如何遍历一个二维数组：")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("for(int i = 0;i<a.length;a++){   // 外层循环代表行  a.length 求行数\n    for(int j = 0;j<a[i].length;j++){//内层循环代表列 a[i].length 求每一行的列数\n    \tSystem.out.print(a[i][j]);//打印第i行第j列的值\n    }\n    System.out.println();\n}\n")])])]),a("p",[t._v("练习：二维数组求和")]),t._v(" "),a("p",[t._v("二维数组直接赋值:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("//第一种情况\nint[][] b = {\n    \t\t{1,2},\n    \t\t{3,4}\n\t\t\t};\n// 这个数组与上述例子一样\nSystem\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("第二种情况:\nint[][] c = new int[][]{\n    \t\t\t\t{1,2},\n    \t\t\t\t{3,4}\n\t\t\t\t\t};\n")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("学到这里二维数组完了吗？没呢，还有一种情况。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 先声明行，后声明列：\nString[][] y = new String[2][];\ny[0] = new int[2]; // 定义第一行有五列\ny[1] = new int[3];//定义第二行有十列\n")])])])]),t._v(" "),a("blockquote",[a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('// 例如:多个市属于一个省\n// 广东省\ny[0][0] = "广州市"; \ny[0][1] = "深圳市";\n//陕西省\ny[1][0] = "宝鸡市";\ny[1][1] = "西安市";\n')])])]),a("p",[t._v("拔高练习: 打印杨辉三角")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://note.youdao.com/yws/public/resource/ccf99ef2d2d047876fb26608433468fc/xmlnote/9AE9D6874CB74A80956B9074ECB7841C/28475",alt:"1528877358834"}})]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('int[][] a = new int[10][];\nfor(int i = 0;i<a.length;i++){\n\ta[i] = new int[i+1];\n\tfor(int j = 0;j<a[i].length;j++){\n\t\tif(j == 0 || i == j){\n\t\t\ta[i][j] = 1;\n\t\t}else{\n\t\t\ta[i][j] = a[i -1][j] + a[i-1][j-1];\n\t\t}\n\t}\n\t\t\t\n}\nfor (int[] is : a) {\n\tfor (int i : is) {\n\t\tSystem.out.print(i+"\\t");\n\t}\n\tSystem.out.println();\n}\n')])])])]),t._v(" "),a("h4",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("什么是方法？")])]),t._v(" "),a("p",[t._v("​\t我们经常说做事要有方式方法。实现某个目的的具体过程.")]),t._v(" "),a("p",[t._v("​\t例如我们学过 main函数在里面写的排序，求水仙花数等")]),t._v(" "),a("p",[a("strong",[t._v("为什么要用方法？")])]),t._v(" "),a("p",[t._v("​\t例如：有三个人 小明，小华，小红三个人，")]),t._v(" "),a("p",[t._v("​\t\t老师要求小明把班级语文分数成绩排名")]),t._v(" "),a("p",[t._v("​\t\t\t要求小华把班级数学分数成绩排名")]),t._v(" "),a("p",[t._v("​\t\t\t要求小华把班级英语分数成绩排名")]),t._v(" "),a("p",[t._v("​\t这个时候都要用到排序，我们此时可以把制作一个排序的方法供他们使用")]),t._v(" "),a("p",[t._v("​\t这样代码就只用写一次，多次使用，这样就提高了代码的复用性")]),t._v(" "),a("p",[a("strong",[t._v("方法分为两类四种:")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("访问修饰符  是否静态 有无返回值  方法名( 有无参数 ){\n    \n} \n//相似与\npublic static void main(String[] args){\n    \n}\n")])])]),a("p",[a("strong",[t._v("一. 无返回值")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('// 1.无参数无返回值\npublic static void demo1(){\n    System.out.println("我是无参数无返回值");\n}\n')])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 1.有参数无返回值\n// 何为参数？ f(x)这个函数里面的 x 就叫做参数\npublic static void demo2(int i){// int i 就是参数 \n    System.out.println(i);\n}\n练习: 传递一个一维数组，求出最大值。\n")])])]),a("p",[t._v("1.定义方法的步骤是什么?")]),t._v(" "),a("p",[t._v("​\t定义方法有两个明确:")]),t._v(" "),a("p",[t._v("​\t\ta.是否有返回值")]),t._v(" "),a("p",[t._v("​\t\tb.是否有未知参，参与运算")]),t._v(" "),a("p",[t._v("2.方法的执行流程是什么?")]),t._v(" "),a("p",[t._v("​\t自己定义的方法不被调用的时候是不会被执行的。")]),t._v(" "),a("p",[t._v("​\t在主函数里直接写上方法的名字即可(要考虑是否需要参数)")]),t._v(" "),a("p",[t._v("调用者: 主函数，main")]),t._v(" "),a("p",[t._v("执行者: 某一个方法本身")]),t._v(" "),a("p",[t._v("实际参数: 实际参与运算的数据")]),t._v(" "),a("p",[t._v("形式参数: 方法小括号里的变量")]),t._v(" "),a("p",[a("strong",[t._v("二.有返回值")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("// 1. 无参数有返回值  \n// 什么是返回值？ 把void这个关键字改为 数据类型时就说明这个方法是有返回值的\n// 怎么返回？ 用 return 关键字， 返回的值的类型与方法上面的数据类型一致\npublic static int demo3(){\n    return 5; // 返回值，顾名思义返回的是一个值\n}\npublic static int demo4(){\n    int a = 5;\n    return a;\n}\n")])])]),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("//2.有参数有返回值\npublic static int demo5(int i){\n    \n    return i;\n}\n")])])]),a("p",[a("strong",[t._v("注意:")])]),t._v(" "),a("p",[t._v("​\t其实每一个方法最后一行都有一个return，没有返回值可以省略不写，但系统会帮我们添加一个，其作用就是为了结束方法")]),t._v(" "),a("p",[t._v("​\t如果手动的写出 return 就不允许带回任意的数据。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public static void test(){\n    return;\n}\n")])])]),a("p",[t._v("定义及使用方法的注意事项有哪些？")]),t._v(" "),a("p",[t._v("​\t1.方法不能定义在另外一个方法的里面")]),t._v(" "),a("p",[t._v("​\t2.写错方法名字")]),t._v(" "),a("p",[t._v("​\t3.写错了参数列表")]),t._v(" "),a("p",[t._v("​\t4.方法返回值是void，方法中可以省略return 不写")]),t._v(" "),a("p",[t._v("​         "),a("strong",[t._v("（return 后面与下面不能有代码）")])]),t._v(" "),a("p",[t._v("​\t5.方法返回值类型和return 后面数据类型必须匹配")]),t._v(" "),a("p",[t._v("​\t6.调用方法的时候，返回值void不能写在输出语句中")]),t._v(" "),a("p",[t._v("练习：")]),t._v(" "),a("p",[t._v("addition、subtract、 multiply、division")]),t._v(" "),a("p",[t._v("传递数组排序")])]),t._v(" "),a("h4",{attrs:{id:"方法的重载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法的重载","aria-hidden":"true"}},[t._v("#")]),t._v(" 方法的重载")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("什么是方法的重载?")])]),t._v(" "),a("p",[t._v("​\t在同一个类中：")]),t._v(" "),a("p",[t._v("​\t\t方法名相同")]),t._v(" "),a("p",[t._v("​\t\t参数列表不同(参数的顺序、个数、类型)")]),t._v(" "),a("p",[t._v("​\t\t和返回值无关")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("public static void test1(){\n    \n}\npublic static void test2(int i){\n    \n}\npublic static void test3(String name){\n    \n}\npublic static void test4(char sex){\n    \n}\npublic static void test5(double weight){\n    \n}\npublic static void test6(int i,int j){\n    \n}\npublic static void test7(int i,String name){\n    \n}\n..........\n")])])]),a("p",[a("strong",[t._v("方法参数分两种：")])]),t._v(" "),a("p",[t._v("​\t一.基本数据类型")]),t._v(" "),a("p",[t._v("​\t\t基本数据类型的变量当做参数传递的时候，是不改变原值")]),t._v(" "),a("p",[t._v("​\t\t方法的局部变量会随着方法的执行完毕而被释放")]),t._v(" "),a("p",[t._v("​\t\t局部变量:")]),t._v(" "),a("p",[t._v("​\t\t\t定义在方法的声明上和 方法体内")]),t._v(" "),a("p",[t._v("​\t二.引用数据类型")]),t._v(" "),a("p",[t._v("​\t\t引用数据类型当做参数传递，其实传递的是地址值，是改变原值")]),t._v(" "),a("p",[t._v("​\t\t即使方法执行完毕，但是实体(对象、数组)还在对内存中，所以在主函数里面继续访问的时候，已经是被更改后的值")])])])}],!1,null,null,null);n.default=e.exports}}]);