(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{213:function(t,e,a){"use strict";a.r(e);var r=a(0),i=Object(r.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:""}},[a("a",{staticClass:"header-anchor",attrs:{href:"#","aria-hidden":"true"}},[t._v("#")])]),t._v(" "),a("h3",{attrs:{id:"今日内容"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#今日内容","aria-hidden":"true"}},[t._v("#")]),t._v(" 今日内容")]),t._v(" "),a("blockquote",[a("p",[t._v("字节流")])]),t._v(" "),a("blockquote",[a("p",[t._v("字符流")])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"字节流"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字节流","aria-hidden":"true"}},[t._v("#")]),t._v(" 字节流")]),t._v(" "),a("blockquote",[a("p",[t._v("在前面的学习过程中，我们一直都是在操作文件或者文件夹，并没有给文件中写任何数据。现在我们就要开始给文件中写数据，或者读取文件中的数据")])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"字节输出流outputstream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字节输出流outputstream","aria-hidden":"true"}},[t._v("#")]),t._v(" 字节输出流OutputStream")]),t._v(" "),a("blockquote",[a("p",[t._v("OutputStream此抽象类，是表示输出字节流的所有类的超类。操作的数据都是字节，定义了输出字节流的基本共性功能方法")])]),t._v(" "),a("blockquote",[a("p",[t._v("输出流中定义都是写write方法")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://note.youdao.com/yws/public/resource/22ceb43e658702695c074f1b2043aa34/xmlnote/BA63479BDE9B4500BD43F0E8CEA270A2/32074",alt:"image"}})]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"fileoutputstream类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fileoutputstream类","aria-hidden":"true"}},[t._v("#")]),t._v(" FileOutputStream类")]),t._v(" "),a("blockquote",[a("p",[t._v("OutputStream有很多子类，其中子类FileOutputStream可用来写入数据到文件")])]),t._v(" "),a("blockquote",[a("p",[t._v("FileOutputStream类，即文件输出流，是用于将数据写入 File的输出流")])]),t._v(" "),a("ul",[a("li",[t._v("构造方法")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://note.youdao.com/yws/public/resource/22ceb43e658702695c074f1b2043aa34/xmlnote/D0C704AF26D547D9A3B4016D6319EC3B/32073",alt:"image"}})]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"fileoutputstream类写入数据到文件中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fileoutputstream类写入数据到文件中","aria-hidden":"true"}},[t._v("#")]),t._v(" FileOutputStream类写入数据到文件中")]),t._v(" "),a("ul",[a("li",[t._v("将数据写到文件中，代码演示")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    public class FileOutputStreamDemo {\n    \tpublic static void main(String[] args) throws IOException {\n    \t\t//需求：将数据写入到文件中。\n    \t\t//创建存储数据的文件。\n    \t\tFile file = new File("c:\\\\file.txt");\n    \t\t//创建一个用于操作文件的字节输出流对象。一创建就必须明确数据存储目的地。\n    \t\t//输出流目的是文件，会自动创建。如果文件存在，则覆盖。\n    \t\tFileOutputStream fos = new FileOutputStream(file);\n    \t\t//调用父类中的write方法。\n    \t\tbyte[] data = "abcde".getBytes();\n    \t\tfos.write(data);\n    \t\t//关闭流资源。\n    \t\tfos.close();\n    \t}\n    }\n\n')])])]),a("hr"),t._v(" "),a("h4",{attrs:{id:"给文件中续写和换行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#给文件中续写和换行","aria-hidden":"true"}},[t._v("#")]),t._v(" 给文件中续写和换行")]),t._v(" "),a("blockquote",[a("p",[t._v("我们直接new FileOutputStream(file)这样创建对象，写入数据，会覆盖原有的文件，那么我们想在原有的文件中续写内容怎么办呢？")])]),t._v(" "),a("blockquote",[a("p",[t._v("继续查阅FileOutputStream的API。发现在FileOutputStream的构造函数中，可以接受一个boolean类型的值，如果值true，就会在文件末位继续添加")])]),t._v(" "),a("ul",[a("li",[t._v("构造方法")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://note.youdao.com/yws/public/resource/22ceb43e658702695c074f1b2043aa34/xmlnote/6D140CADF5504364BEC0F7BA6D658272/32072",alt:"image"}})]),t._v(" "),a("ul",[a("li",[t._v("给文件中续写数据和换行，代码演示")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    public class FileOutputStreamDemo2 {\n    \tpublic static void main(String[] args) throws Exception {\n    \t\tFile file = new File("c:\\\\file.txt");\n    \t\tFileOutputStream fos = new FileOutputStream(file, true);\n    \t\tString str = "\\r\\n"+"HelloIO";\n    \t\tfos.write(str.getBytes());\n    \t\tfos.close();\n    \t}\n    }\n\n')])])]),a("hr"),t._v(" "),a("h4",{attrs:{id:"io异常处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#io异常处理","aria-hidden":"true"}},[t._v("#")]),t._v(" IO异常处理")]),t._v(" "),a("blockquote",[a("p",[t._v("在前面编写代码中都发生了IO的异常。我们在实际开发中，对异常时如何处理的，我们来演示一下")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    public class FileOutputStreamDemo3 {\n    \tpublic static void main(String[] args) {\n    \t\tFile file = new File("c:\\\\file.txt");\n    \t\t//定义FileOutputStream的引用\n    \t\tFileOutputStream fos = null;\n    \t\ttry {\n    \t\t\t//创建FileOutputStream对象\n    \t\t\tfos = new FileOutputStream(file);\n    \t\t\t//写出数据\n    \t\t\tfos.write("abcde".getBytes());\n    \t\t} catch (IOException e) {\n    \t\t\tSystem.out.println(e.toString() + "----");\n    \t\t} finally {\n    \t\t\t//一定要判断fos是否为null，只有不为null时，才可以关闭资源\n    \t\t\tif (fos != null) {\n    \t\t\t\ttry {\n    \t\t\t\t\tfos.close();\n    \t\t\t\t} catch (IOException e) {\n    \t\t\t\t\tthrow new RuntimeException("");\n    \t\t\t\t}\n    \t\t\t}\n    \t\t}\n    \t}\n    }\n')])])]),a("hr"),t._v(" "),a("h4",{attrs:{id:"字节输入流inputstream"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字节输入流inputstream","aria-hidden":"true"}},[t._v("#")]),t._v(" 字节输入流InputStream")]),t._v(" "),a("blockquote",[a("p",[t._v("通过前面的学习，我们可以把内存中的数据写出到文件中，那如何想把内存中的数据读到内存中，我们通过InputStream可以实现。InputStream此抽象类，是表示字节输入流的所有类的超类。，定义了字节输入流的基本共性功能方法")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://note.youdao.com/yws/public/resource/22ceb43e658702695c074f1b2043aa34/xmlnote/7A0B263287F24E56A5C0E0EB8AAE4F91/32076",alt:"image"}})]),t._v(" "),a("ul",[a("li",[t._v("int read():读取一个字节并返回，没有字节返回-1")]),t._v(" "),a("li",[t._v("int read(byte[]): 读取一定量的字节数，并存储到字节数组中，返回读取到的字节数")])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"fileinputstream-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fileinputstream-类","aria-hidden":"true"}},[t._v("#")]),t._v(" FIleInputStream 类")]),t._v(" "),a("blockquote",[a("p",[t._v("InputStream有很多子类，其中子类FileInputStream可用来读取文件内容")])]),t._v(" "),a("blockquote",[a("p",[t._v("FileInputStream 从文件系统中的某个文件中获得输入字节")])]),t._v(" "),a("ul",[a("li",[t._v("构造方法")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://note.youdao.com/yws/public/resource/22ceb43e658702695c074f1b2043aa34/xmlnote/30E6578E42E348679D365DA62FC0B3F0/32079",alt:"image"}})]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"fileinputstream类读取数据read方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#fileinputstream类读取数据read方法","aria-hidden":"true"}},[t._v("#")]),t._v(" FileInputStream类读取数据read方法")]),t._v(" "),a("blockquote",[a("p",[t._v("在读取文件中的数据时，调用read方法，实现从文件中读取数据")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://note.youdao.com/yws/public/resource/22ceb43e658702695c074f1b2043aa34/xmlnote/6B25E118CBF74ACC99F8DE689A5681CB/32078",alt:"image"}})]),t._v(" "),a("ul",[a("li",[t._v("从文件中读取数据，代码演示")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    public class FileInputStreamDemo {\n    \tpublic static void main(String[] args) throws IOException {\n    \t\tFile file = new File("c:\\\\file.txt");\n    \t\t//创建一个字节输入流对象,必须明确数据源，其实就是创建字节读取流和数据源相关联。\n    \t\tFileInputStream fis = new FileInputStream(file);\n    \t\t//读取数据。使用 read();一次读一个字节。\n    \t\tint ch = 0;\n    \t\twhile((ch=fis.read())!=-1){\n    \t\t\tSystem.out.println("ch="+(char)ch);\t\t\n    \t\t}\n    \t\t// 关闭资源。\n    \t\tfis.close();\n    \t}\n    }\n\n')])])]),a("hr"),t._v(" "),a("h4",{attrs:{id:"读取数据read-byte-方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#读取数据read-byte-方法","aria-hidden":"true"}},[t._v("#")]),t._v(" 读取数据read(byte[])方法")]),t._v(" "),a("blockquote",[a("p",[t._v("在读取文件中的数据时，调用read方法，每次只能读取一个，太麻烦了，于是我们可以定义数组作为临时的存储容器，这时可以调用重载的read方法，一次可以读取多个字符")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://note.youdao.com/yws/public/resource/22ceb43e658702695c074f1b2043aa34/xmlnote/2BA36F482F6A44418AC8A3E14F9D0D06/32075",alt:"image"}})]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    public class FileInputStreamDemo2 {\n    \tpublic static void main(String[] args) throws IOException {\n    \t\t/*\n    \t\t * 演示第二个读取方法， read(byte[]);\n    \t\t */\n    \t\tFile file = new File("c:\\\\file.txt");\n    \t\t// 创建一个字节输入流对象,必须明确数据源，其实就是创建字节读取流和数据源相关联。\n    \t\tFileInputStream fis = new FileInputStream(file);\t\t\n    \t\t//创建一个字节数组。\n    \t\tbyte[] buf = new byte[1024];//长度可以定义成1024的整数倍。\t\t\n    \t\tint len = 0;\n    \t\twhile((len=fis.read(buf))!=-1){\n    \t\t\tSystem.out.println(new String(buf,0,len));\n    \t\t}\n    \t\tfis.close();\n    \t}\n    }\n\n')])])]),a("hr"),t._v(" "),a("h3",{attrs:{id:"字节流练习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字节流练习","aria-hidden":"true"}},[t._v("#")]),t._v(" 字节流练习")]),t._v(" "),a("blockquote",[a("p",[t._v("既然会了文件的读和写操作了，那么我们就要在这个基础上进行更为复杂的操作。使用读写操作完成文件的复制")])]),t._v(" "),a("h4",{attrs:{id:"复制文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复制文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 复制文件")]),t._v(" "),a("blockquote",[a("p",[t._v("原理: 读取一个已有的数据，并将这些读到的数据写入到另一个文件中")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://note.youdao.com/yws/public/resource/22ceb43e658702695c074f1b2043aa34/xmlnote/BA49672636E648F6BD01ECEB870EE11B/32077",alt:"image"}})]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    public class CopyFileTest {\n    \tpublic static void main(String[] args) throws IOException {\n    \t\t//1,明确源和目的。\n    \t\tFile srcFile = new File("c:\\\\YesDir\\test.JPG");\n    \t\tFile destFile = new File("copyTest.JPG");\n    \t\t\n    \t\t//2,明确字节流 输入流和源相关联，输出流和目的关联。\n    \t\tFileInputStream fis = new FileInputStream(srcFile);\n    \t\tFileOutputStream fos = new FileOutputStream(destFile);\n    \t\t\n    \t\t//3, 使用输入流的读取方法读取字节，并将字节写入到目的中。\n    \t\tint ch = 0;\n    \t\twhile((ch=fis.read())!=-1){\n    \t\t\tfos.write(ch);\n    \t\t}\n    \t\t//4,关闭资源。\n    \t\tfos.close();\n    \t\tfis.close();\n    \t}\n    }\n\n')])])]),a("blockquote",[a("p",[t._v("上述代码输入流和输出流之间是通过ch这个变量进行数据交换的")])]),t._v(" "),a("blockquote",[a("p",[t._v("上述复制文件有个问题，每次都从源文件读取一个，然后在写到指定文件，接着再读取一个字符，然后再写一个，一直这样下去。效率极低")])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"缓冲数组方法复制文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓冲数组方法复制文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 缓冲数组方法复制文件")]),t._v(" "),a("blockquote",[a("p",[t._v("上述代码复制文件效率太低了，并且频繁的从文件读数据，和写数据，能不能一次多把文件中多个数据都读进内容中，然后在一次写出去，这样的速度一定会比前面代码速度快")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    public class CopyFileByBufferTest {\n    \tpublic static void main(String[] args) throws IOException {\n    \t\tFile srcFile = new File("c:\\\\YesDir\\test.JPG");\n    \t\tFile destFile = new File("copyTest.JPG");\n    \t\t// 明确字节流 输入流和源相关联，输出流和目的关联。\n    \t\tFileInputStream fis = new FileInputStream(srcFile);\n    \t\tFileOutputStream fos = new FileOutputStream(destFile);\n    \t\t//定义一个缓冲区。\n    \t\tbyte[] buf = new byte[1024];\n    \t\tint len = 0;\n    \t\twhile ((len = fis.read(buf)) != -1) {\n    \t\t\tfos.write(buf, 0, len);// 将数组中的指定长度的数据写入到输出流中。\n    \t\t}\n    \t\t// 关闭资源。\n    \t\tfos.close();\n    \t\tfis.close();\n    \t}\n    }\n\n')])])]),a("hr"),t._v(" "),a("h2",{attrs:{id:"字节流-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字节流-2","aria-hidden":"true"}},[t._v("#")]),t._v(" 字节流")]),t._v(" "),a("blockquote",[a("p",[t._v("经过前面的学习，我们基本掌握的文件的读写操作，在操作过程中字节流可以操作所有数据，可是当我们操作的文件中有中文字符，并且需要对中文字符做出处理时怎么办呢?")])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"字节流读取字符的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字节流读取字符的问题","aria-hidden":"true"}},[t._v("#")]),t._v(" 字节流读取字符的问题")]),t._v(" "),a("blockquote",[a("p",[t._v("通过以下程序读取带有中文件的文件")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    public class CharStreamDemo {\n    \tpublic static void main(String[] args) throws IOException {\n    \t\t//给文件中写中文\n    \t\twriteText();\n    \t\t//读取文件中的中文\n    \t\treadText();\n    \t}\t\n    \t//读取中文\n    \tpublic static void readText() throws IOException {\n    \t\tFileInputStream fis = new FileInputStream("c:\\\\a.txt");\n    \t\tint ch = 0;\n    \t\twhile((ch = fis.read())!=-1){\n    \t\t\tSystem.out.println(ch);\n    \t\t}\n    \t}\n    \t//写中文\n    \tpublic static void writeText() throws IOException {\n    \t\tFileOutputStream fos = new FileOutputStream("c:\\\\a.txt");\n    \t\tfos.write("好再来a".getBytes());\n    \t\tfos.close();\n    \t}\n    }\n\n')])])]),a("blockquote",[a("p",[t._v("上面程序在读取含有中文的文件时，我们并没有看到具体的中文，而是看到一些数字，这是什么原因呢？既然看不到中文，那么我们如何对其中的中文做处理呢？要解决这个问题，我们必须研究下字符的编码过程")])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"字符编码表"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符编码表","aria-hidden":"true"}},[t._v("#")]),t._v(" 字符编码表")]),t._v(" "),a("blockquote",[a("p",[t._v("我们知道计算机底层数据存储的都是二进制数据，而我们生活中的各种各样的数据，如何才能和计算机中存储的二进制数据对应起来呢？")])]),t._v(" "),a("blockquote",[a("p",[t._v("这时老美他们就把每一个字符和一个整数对应起来，就形成了一张编码表，老美他们的编码表就是ASCII表。其中就是各种英文字符对应的编码")])]),t._v(" "),a("ul",[a("li",[t._v("编码表：其实就是生活中字符和计算机二进制的对应关系表\n"),a("ul",[a("li",[t._v("1.ASCII： 一个字节中的7位就可以表示。对应的字节都是正数。0-xxxxxxx")]),t._v(" "),a("li",[t._v("一个字节用的8位。1-xxxxxxx  负数")]),t._v(" "),a("li",[t._v("GB2312:简体中文码表。包含6000-7000个中文和符号。用两个字节表示。两个字节第一个字节是负数,第二个字节可能是正数\n"),a("ul",[a("li",[t._v("GBK:目前最常用的中文码表，2万的中文和符号。用两个字节表示，其中的一部分文字，第一个字节开头是1，第二字节开头是0")]),t._v(" "),a("li",[t._v("GB18030：最新的中文码表，目前还没有正式使用")])])]),t._v(" "),a("li",[t._v("UNICODE : 国际标准码表:无论是什么文字，都用两个字节存储\n"),a("ul",[a("li",[t._v("Java中的char类型用的就是这个码表。char c = 'a';占两个字节")]),t._v(" "),a("li",[t._v("Java中的字符串是按照系统默认码表来解析的。简体中文版 字符串默认的码表是GBK")])])]),t._v(" "),a("li",[t._v("UTF-8:基于unicode，一个字节就可以存储数据，不要用两个字节存储，而且这个码表更加的标准化，在每一个字节头加入了编码信息")])])])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("    能识别中文的码表：GBK、UTF-8；正因为识别中文码表不唯一，涉及到了编码解码问题。\n    对于我们开发而言；常见的编码 GBK  UTF-8  ISO-8859-1\n    文字---\x3e(数字) ：编码。 “abc”.getBytes()  byte[]\n    (数字)---\x3e文字  : 解码。 byte[] b={97,98,99}  new String(b)\n")])])]),a("hr"),t._v(" "),a("h4",{attrs:{id:"字符输入流reader"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符输入流reader","aria-hidden":"true"}},[t._v("#")]),t._v(" 字符输入流Reader")]),t._v(" "),a("blockquote",[a("p",[t._v("上述程序中我们读取拥有中文的文件时，使用的字节流在读取，那么我们读取到的都是一个一个字节。只要把这些字节去查阅对应的编码表，就能够得到与之对应的字符。API中是否给我们已经提供了读取相应字符的功能流对象，Reader，读取字符流的抽象超类")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://note.youdao.com/yws/public/resource/22ceb43e658702695c074f1b2043aa34/xmlnote/41A9C549663C402C8AC0DCE0F3EC72CC/32081",alt:"image"}})]),t._v(" "),a("ul",[a("li",[t._v("read():读取单个字符并返回")]),t._v(" "),a("li",[t._v("read(char[]):将数据读取到数组中，并返回读取的个数")])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"filereader类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filereader类","aria-hidden":"true"}},[t._v("#")]),t._v(" FileReader类")]),t._v(" "),a("blockquote",[a("p",[t._v("查阅FileInputStream的API，发现FileInputStream 用于读取诸如图像数据之类的原始字节流。要读取字符流，请考虑使用 FileReader")])]),t._v(" "),a("blockquote",[a("p",[t._v("打开FileReader的API介绍。用来读取字符文件的便捷类。此类的构造方法假定默认字符编码和默认字节缓冲区大小都是适当的")])]),t._v(" "),a("ul",[a("li",[t._v("构造方法")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://note.youdao.com/yws/public/resource/22ceb43e658702695c074f1b2043aa34/xmlnote/101B5858C20144ADB9524C03869B1120/32083",alt:"image"}})]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"filereader读取包含中中文的文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filereader读取包含中中文的文件","aria-hidden":"true"}},[t._v("#")]),t._v(" FileReader读取包含中中文的文件")]),t._v(" "),a("ul",[a("li",[t._v("使用FileReader读取包含中文的文件")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    public class CharStreamDemo {\n    \tpublic static void main(String[] args) throws IOException {\n    \t\t//给文件中写中文\n    \t\twriteText();\n    \t\t//读取文件中的中文\n    \t\treadText();\n    \t}\t\n    \t//读取中文\n    \tpublic static void readText() throws IOException {\n    \t\tFileReader fr = new FileReader("E:\\\\test\\\\a.txt");\n    \t\tint ch = 0;\n    \t\twhile((ch = fr.read())!=-1){\n    \t\t\t//输出的字符对应的编码值\n    \t\t\tSystem.out.println(ch);\n    \t\t\t//输出字符本身\n    \t\t\tSystem.out.println((char)ch);\n    \t\t}\n    \t}\n    \t//写中文\n    \tpublic static void writeText() throws IOException {\n    \t\tFileOutputStream fos = new FileOutputStream("E:\\\\test\\\\a.txt");\n    \t\tfos.write("林子很大".getBytes());\n    \t\tfos.close();\n    \t}\n    }\n\n')])])]),a("hr"),t._v(" "),a("h4",{attrs:{id:"字符输入流writer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符输入流writer","aria-hidden":"true"}},[t._v("#")]),t._v(" 字符输入流Writer")]),t._v(" "),a("blockquote",[a("p",[t._v("既然有专门用于读取字符的流对象，那么肯定也有写的字符流对象，查阅API，发现有一个Writer类，Writer是写入字符流的抽象类。其中描述了相应的写的动作")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://note.youdao.com/yws/public/resource/22ceb43e658702695c074f1b2043aa34/xmlnote/CAA96318F8C14645941ABED511363184/32085",alt:"image"}})]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"filewriter类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filewriter类","aria-hidden":"true"}},[t._v("#")]),t._v(" FileWriter类")]),t._v(" "),a("blockquote",[a("p",[t._v("查阅FileOutputStream的API，发现FileOutputStream用于写入诸如图像数据之类的原始字节的流。要写入字符流，请考虑使用 FileWriter")])]),t._v(" "),a("blockquote",[a("p",[t._v("打开FileWriter的API介绍。用来写入字符文件的便捷类.")])]),t._v(" "),a("ul",[a("li",[t._v("构造方法")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://note.youdao.com/yws/public/resource/22ceb43e658702695c074f1b2043aa34/xmlnote/A86CDA5033AB4F5C83230D5827B6D2BC/32087",alt:"image"}})]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"filewriter写入中文到文件中"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#filewriter写入中文到文件中","aria-hidden":"true"}},[t._v("#")]),t._v(" FileWriter写入中文到文件中")]),t._v(" "),a("ul",[a("li",[t._v("写入字符到文件中，先进行流的刷新，再进行流的关闭")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    public class FileWriterDemo {\n    \tpublic static void main(String[] args) throws IOException {\n    \t\t//演示FileWriter 用于操作文件的便捷类。\n    \t\tFileWriter fw = new FileWriter("E：\\\\text\\\\fw.txt");\n    \t\tfw.write("你好谢谢再见");//这些文字都要先编码。都写入到了流的缓冲区中。\n    \t\tfw.flush();//刷新\n    \t\tfw.close();// 关闭之前需要刷新它\n    \t}\n    }\n\n')])])]),a("blockquote",[a("p",[t._v("flush():将流中的缓冲区缓冲的数据刷新到目的地中，刷新后，流还可以继续使用")])]),t._v(" "),a("blockquote",[a("p",[t._v("close():关闭资源，但在关闭前会将缓冲区中的数据先刷新到目的地，否则丢失数据，然后在关闭流。流不可以使用。如果写入数据多，一定要一边写一边刷新，最后一次可以不刷新，由close完成刷新并关闭")])]),t._v(" "),a("hr"),t._v(" "),a("h4",{attrs:{id:"字符流练习"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符流练习","aria-hidden":"true"}},[t._v("#")]),t._v(" 字符流练习")]),t._v(" "),a("p",[a("strong",[t._v("复制文本文件")])]),t._v(" "),a("ul",[a("li",[t._v("思路\n"),a("ul",[a("li",[t._v("既然是文本涉及编码表。需要用字符流")]),t._v(" "),a("li",[t._v("操作的是文件。涉及硬盘")]),t._v(" "),a("li",[t._v("有指定码表吗？没有，默认就行")]),t._v(" "),a("li",[t._v("操作的是文件，使用的 默认码表。使用哪个字符流对象。直接使用字符流操作文件的便捷类。FileReader  FileWriter")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('    public class CopyTextFileTest {\n    \tpublic static void main(String[] args) throws IOException {\n    \t\tcopyTextFile();\n    \t}\n    \tpublic static void copyTextFile() throws IOException {\n    \t\t//1,明确源和目的。\n    \t\tFileReader fr = new FileReader("c:\\\\a.txt");\n    \t\tFileWriter fw = new FileWriter("c:\\\\copy.txt");\n    \t\t//2,为了提高效率。自定义缓冲区数组。字符数组。\n    \t\tchar[] buf = new char[1024];\n    \t\tint len = 0;\n    \t\twhile((len=fr.read(buf))!=-1){\n    \t\t\tfw.write(buf,0,len);\n    \t\t}\n    \t\t/*2,循环读写操作。效率低。\n    \t\tint ch = 0;\n    \t\twhile((ch=fr.read())!=-1){\n    \t\t\tfw.write(ch);\n    \t\t}\n    \t\t*/\n    \t\t//3,关闭资源。\n    \t\tfw.close();\n    \t\tfr.close();\n    \t}\n    }\n\n')])])])])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),a("h4",{attrs:{id:"知识点总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#知识点总结","aria-hidden":"true"}},[t._v("#")]),t._v(" 知识点总结")]),t._v(" "),a("ul",[a("li",[t._v("IO分类\n"),a("ul",[a("li",[t._v("|- 字节流\n"),a("ul",[a("li",[t._v("|- 字节输入流InputStream抽象类\n"),a("ul",[a("li",[t._v("|- FileInputStream 操作文件的字节流")])])]),t._v(" "),a("li",[t._v("|- 字节输入流OutputStream 抽象类\n"),a("ul",[a("li",[t._v("|- FileOutputStream操作文件的字节输入流")])])])])]),t._v(" "),a("li",[t._v("|- 字符流\n"),a("ul",[a("li",[t._v("|- 字符输入流Reader抽象类\n"),a("ul",[a("li",[t._v("InputStreamReader 输入操作的转换流\n"),a("ul",[a("li",[t._v("|- FileReader 用来操作文件的字符输入流(简便的流)")])])])])]),t._v(" "),a("li",[t._v("|- 字符输入流Writer抽象类\n"),a("ul",[a("li",[t._v("OutputStreamWriter 输出操作的转换流\n"),a("ul",[a("li",[t._v("|- FileWriter 用来操作文件的字符输出流(简便的流)")])])])])])])])])])])])}],!1,null,null,null);e.default=i.exports}}]);